# Term
bind = $Mod, Return, exec, $term
bind = $Mod, t, exec, $term

# Apps
bind = $Mod SHIFT, A, exec, arduino-ide
bind = $Mod SHIFT, F, exec, $thunar
bind = $Mod SHIFT, B, exec, $brave
bind = $Mod SHIFT, G, exec, godot
bind = $Mod SHIFT, O, exec, $opera
bind = $Mod SHIFT, M, exec, $emulator
bind = $Mod SHIFT, C, exec, code
bind = $Mod SHIFT, P, exec, scrcpy

# Wofi
bind = $Mod, D, exec, $launcher
bind = $Mod SHIFT, D, exec, $launcher2
bind = $Mod, period, exec, bemoji -t
bind = $Mod SHIFT, period, exec, bemoji -t -f ~/kaomoji/data.txt

# Function Keys
bindle = , XF86AudioRaiseVolume, exec, $audioR
bindle = , XF86AudioLowerVolume, exec, $audioL
bindle = , XF86AudioMute, exec, $audioM

bindle = , XF86MonBrightnessUp, exec, $lightU
bindle = , XF86MonBrightnessDown, exec, $lightD

bindle = , XF86AudioNext, exec, mpc next
bindle = , XF86AudioPrev, exec, mpc prev
bindle = , XF86AudioPlay, exec, mpc toggle
bindle = , XF86AudioStop, exec, mpc stop

# Screenshots
bind = , Print, exec, $screenshot fullscreen
bind = SHIFT, Print, exec, $screenshot geometry

# Controls 
bind = $Mod, A, exec, hyprctl -j activewindow > ~/activewindow.json
bind = $Mod, C, killactive,
bind = $Mod, F, fullscreen,
bind = $Mod, Space, togglefloating,
bind = $Mod, P, pseudo, # dwindle
bind = $Mod, J, togglesplit, # dwindle
# bind = $Mod, M, exit, 

# Resize
# will switch to a submap called resize
bind = $Mod, R, submap, resize

# will start a submap called "resize"
submap = resize

# sets repeatable binds for resizing the active window
binde = , right, resizeactive, 10 0
binde = , left, resizeactive, -10 0
binde = , up, resizeactive, 0 -10
binde = , down, resizeactive, 0 10

# use reset to go back to the global submap
bind = , escape, submap, reset 

# will reset the submap, meaning end the current one and return to the global one
submap = reset

# keybinds further down will be global again...

# Move focus with Mod + arrow keys
bind = $Mod, left, movefocus, l
bind = $Mod, right, movefocus, r
bind = $Mod, up, movefocus, u
bind = $Mod, down, movefocus, d

# Switch workspaces with Mod + [0-9]
bind = $Mod, 1, workspace, 1
bind = $Mod, 2, workspace, 2
bind = $Mod, 3, workspace, 3
bind = $Mod, 4, workspace, 4
bind = $Mod, 5, workspace, 5
bind = $Mod, 6, workspace, 6
bind = $Mod, 7, workspace, 7
bind = $Mod, 8, workspace, 8
bind = $Mod, 9, workspace, 9
bind = $Mod, 0, workspace, 10

# Move active window to a workspace with Mod + SHIFT + [0-9]
bind = $Mod SHIFT, 1, movetoworkspace, 1
bind = $Mod SHIFT, 2, movetoworkspace, 2
bind = $Mod SHIFT, 3, movetoworkspace, 3
bind = $Mod SHIFT, 4, movetoworkspace, 4
bind = $Mod SHIFT, 5, movetoworkspace, 5
bind = $Mod SHIFT, 6, movetoworkspace, 6
bind = $Mod SHIFT, 7, movetoworkspace, 7
bind = $Mod SHIFT, 8, movetoworkspace, 8
bind = $Mod SHIFT, 9, movetoworkspace, 9
bind = $Mod SHIFT, 0, movetoworkspace, 10

# Scroll through existing workspaces with Mod + scroll
bind = $Mod, mouse_down, workspace, e+1
bind = $Mod, mouse_up, workspace, e-1

# Move/resize windows with Mod + LMB/RMB and dragging
bindm = $Mod, mouse:272, movewindow
bindm = $Mod, mouse:273, resizewindow


# bind = , mouse:273, exec, $launcher